{
	"aspnetcore-action": {
		"prefix": "mvc6-action",
		"body": [
      "public IActionResult ${1:methodName}()",
      "{",
      "  $0",
      "  return View();",
      "}"
    ],
		"description": "Creates an MVC6 Action that returns a view."
	},
	"aspnetcore-get": {
		"prefix": "mvc6-get",
		"body": [
      "[HttpGet]",
      "public IActionResult Get()",
      "{",
      "  try",
      "  {",
      "    $0",
      "    return Ok();",
      "  }",
      "  catch (Exception)",
      "  {",
      "    return BadRequest();",
      "  }",
      "}"
    ],
		"description": "Creates an MVC6 Action that Implements a basic GET."
	},
	"aspnetcore-post": {
		"prefix": "mvc6-post",
		"body": [
      "[HttpPost]",
      "public IActionResult Post([FromBody] ${1:modelType} model)",
      "{",
      "  try",
      "  {",
      "    $0",
      "    return Created(\"\", null);",
      "  }",
      "  catch (Exception)",
      "  {",
      "    return BadRequest();",
      "  }",
      "}"
    ],
		"description": "Creates an MVC6 Action that Implements a basic POST."
	},
	"aspnetcore-put": {
		"prefix": "mvc6-put",
		"body": [
      "[HttpPut]",
      "public IActionResult Put([FromBody] ${1:modelType} model)",
      "{",
      "  try",
      "  {",
      "    $0",
      "    return Ok();",
      "  }",
      "  catch (Exception)",
      "  {",
      "    return BadRequest();",
      "  }",
      "}"
    ],
		"description": "Creates an MVC6 Action that Implements a basic PUT."
	},
	"aspnetcore-delete": {
		"prefix": "mvc6-delete",
		"body": [
      "[HttpDelete]",
      "public IActionResult Delete(${1:inputType} id)",
      "{",
      "  try",
      "  {",
      "    $0",
      "    return Ok();",
      "  }",
      "  catch (Exception)",
      "  {",
      "    return BadRequest();",
      "  }",
      "}"
    ],
		"description": "Creates an async MVC6 Action that Implements a basic DELETE."
	},
	"aspnetcore-action-async": {
		"prefix": "mvc6-action-async",
		"body": [
      "public async Task<IActionResult> ${1:methodName}()",
      "{",
      "  $0",
      "",
      "  // TODO Remove",
      "  await Task.Yield();",
      "",
      "  return View();",
      "}"
    ],
		"description": "Creates an async MVC6 Action that returns a view."
	},
	"aspnetcore-get-async": {
		"prefix": "mvc6-get-async",
		"body": [
      "[HttpGet]",
      "public async Task<IActionResult> Get()",
      "{",
      "  try",
      "  {",
      "    $0",
      "",
      "    // TODO Remove",
      "    await Task.Yield();",
      "",
      "    return Ok();",
      "  }",
      "  catch (Exception)",
      "  {",
      "    return BadRequest();",
      "  }",
      "}"
    ],
		"description": "Creates an async MVC6 Action that Implements a basic GET."
	},
	"aspnetcore-post-async": {
		"prefix": "mvc6-post-async",
		"body": [
      "[HttpPost]",
      "public async Task<IActionResult> Post([FromBody] ${1:modelType} model)",
      "{",
      "  try",
      "  {",
      "    $0",
      "",
      "    // TODO Remove",
      "    await Task.Yield();",
      "",
      "    return Created(\"\", null);",
      "  }",
      "  catch (Exception)",
      "  {",
      "    return BadRequest();",
      "  }",
      "}"
    ],
		"description": "Creates an async MVC6 Action that Implements a basic POST."
	},
	"aspnetcore-put-async": {
		"prefix": "mvc6-put-async",
		"body": [
      "[HttpPut]",
      "public async Task<IActionResult> Put([FromBody] ${1:modelType} model)",
      "{",
      "  try",
      "  {",
      "    $0",
      "",
      "    // TODO Remove",
      "    await Task.Yield();",
      "",
      "    return Ok();",
      "  }",
      "  catch (Exception)",
      "  {",
      "    return BadRequest();",
      "  }",
      "}"
    ],
		"description": "Creates an async MVC6 Action that Implements a basic PUT."
	},
	"aspnetcore-delete-async": {
		"prefix": "mvc6-delete-async",
		"body": [
      "[HttpDelete]",
      "public async Task<IActionResult> Delete(${1:inputType} id)",
      "{",
      "  try",
      "  {",
      "    $0",
      "",
      "    // TODO Remove",
      "    await Task.Yield();",
      "",
      "    return Ok();",
      "  }",
      "  catch (Exception)",
      "  {",
      "    return BadRequest();",
      "  }",
      "}"
    ],
		"description": "Creates an async MVC6 Action that Implements a basic DELETE."
	},
	"aspnetcore-controller": {
		"prefix": "mvc6-controller",
		"body": [
      "using System;",
      "using System.Linq;",
      "using Microsoft.AspNetCore.Mvc;",
      "using Microsoft.Extensions.Logging;",
      "",
      "namespace ${1:NamespaceName}",
      "{",
      "  public class ${2:ControllerName}Controller : Controller",
      "  {",
      "",
      "    ILogger<${2:ControllerName}Controller> _logger;",
      "",
      "    public ${2:ControllerName}Controller(ILogger<${2:ControllerName}Controller> logger)",
      "    {",
      "      _logger = logger;",
      "    }",
      "",
      "    public IActionResult Index()",
      "    {",
      "      $0",
      "      return View();",
      "    }",
      "  }",
      "}"
    ],
		"description": "Creates an MVC6 Controller for views."
	},
	"aspnetcore-apicontroller": {
		"prefix": "mvc6-apicontroller",
		"body": [
      "using System;",
      "using System.Linq;",
      "using Microsoft.AspNetCore.Mvc;",
      "using Microsoft.Extensions.Logging;",
      "",
      "namespace ${1:NamespaceName}",
      "{",
      "",
      "  [Route(\"api\")]",
      "  public class ${2:ControllerName}Controller : Controller",
      "  {",
      "",
      "    ILogger<${2:ControllerName}Controller> _logger;",
      "",
      "    public ${2:ControllerName}Controller(ILogger<${2:ControllerName}Controller> logger)",
      "    {",
      "      _logger = logger;",
      "    }",
      "",
      "    [HttpGet]",
      "    public IActionResult Get()",
      "    {",
      "      try",
      "      {",
      "        return Ok();",
      "      }",
      "      catch (Exception)",
      "      {",
      "        _logger.LogError(\"Failed to execute GET\");",
      "        return BadRequest();",
      "      }",
      "    }",
      "",
      "    [HttpPost]",
      "    public IActionResult Post([FromBody] ${3:modelType} model)",
      "    {",
      "      try",
      "      {",
      "        return Created(\"\", null);",
      "      }",
      "      catch (Exception)",
      "      {",
      "        _logger.LogError(\"Failed to execute POST\");",
      "        return BadRequest();",
      "      }",
      "    }",
      "",
      "    [HttpPut]",
      "    public IActionResult Put([FromBody] ${3:modelType} model)",
      "    {",
      "      try",
      "      {",
      "        return Ok();",
      "      }",
      "      catch (Exception)",
      "      {",
      "        _logger.LogError(\"Failed to execute PUT\");",
      "        return BadRequest();",
      "      }",
      "    }",
      "",
      "    [HttpDelete]",
      "    public IActionResult Delete(${4:inputType} id)",
      "    {",
      "      try",
      "      {",
      "        return Ok();",
      "      }",
      "      catch (Exception)",
      "      {",
      "        _logger.LogError(\"Failed to execute DELETE\");",
      "        return BadRequest();",
      "      }",
      "    }",
      "  }",
      "}"
    ],
		"description": "Creates an MVC6 Controller for an API that implements all four basic verbs."
	},
	"aspnetcore-efcontext": {
		"prefix": "ef-dbcontext",
		"body": [
      "using System;",
      "using Microsoft.EntityFrameworkCore;",
      "using Microsoft.Extensions.Logging;",
      "",
      "namespace ${1:NamespaceName}",
      "{",
      "",
      "  public class ${2:ContextName}Context : DbContext",
      "  {",
      "",
      "    ILogger<${2:ContextName}Context> _logger;",
      "",
      "    public ${2:ContextName}Context(DbContextOptions<${2:ContextName}Context> options, ILogger<${2:ContextName}Context> logger)",
      "      : base(options)",
      "    {",
      "      _logger = logger;",
      "    }",
      "",
      "    public DbSet<${3:DbType}> ${4:CollectionName} { get; set; }",
      "",
      "    public override void OnModelCreating(ModelBuilder builder)",
      "    {",
      "      base.OnModelCreating(builder);",
      "",
      "      $0",
      "",
      "    }",
      "  }",
      "}"
    ],
		"description": "Creates an Entity Framework Core DbContext class."
	}
}